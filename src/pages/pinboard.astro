---
import BaseLayout from "../layouts/BaseLayout.astro";

interface BasePost {
  id: string;
  title: string;
  date: string;
  content: string;
  tags: string[];
}

interface PinnedPost extends BasePost {
  isPinned: true;
  type: 'learning' | 'project';
}

interface RegularPost extends BasePost {
  isPinned?: false;
}

type Post = PinnedPost | RegularPost;

const pinnedPosts: PinnedPost[] = [
  {
    id: "learning",
    isPinned: true,
    title: "Rust and Web Dev",
    date: "3-1-2024",
    content:
      "I've decided to try learning Rust, as it has quickly become an incredibly " +
      "popular language and is being adopted by more and more businesses. " +
      "It also just seems like a very versatile language, with syntax and tools that " +
      "really appeal to me. I'm also trying to learn basic web development, using " +
      "tools like Astro to build the site you're currently on!",
    tags: ["Learning", "Rust", "Web Dev", "Astro"],
    type: "learning"
  },
  {
    id: "project",
    isPinned: true,
    title: "Minui, a terminal UI library from scratch",
    date: "11-1-2024",
    content:
      "This project started as me wanting to make a terminal-based clone of " +
      "Tetris, but no TUI library I could find quite fit my requirements. " +
      "As such, I decided to try making my own (not because it's easy, but " +
      "because I thought it would be easy). I'm doing this project primarily " +
      "in Rust so it doubles as a learning exercise.",
    tags: ["Project", "Minui", "Rust"],
    type: "project"
  },
];

const regularPosts: RegularPost[] = [
  // Regular post contents: id, title, date, content, tags
];

const allPosts: Post[] = [...pinnedPosts, ...regularPosts];
---

<BaseLayout
  title="Pinboard | Jack Derksen"
  description="Check out what I'm currently working on"
>
  <h1>Pinboard</h1>
  <div class="posts-container">
    {
      allPosts.map((post) => (
        <article class:list={[
          "card",
          "post-card",
          { "pinned-post": post.isPinned },
          { [`post-type-${('type' in post) ? post.type : ''}`]: 'type' in post }
        ]}>
          {post.isPinned && (
            <div class="pin-indicator">
              <span class="pin-label">
                <span class="pin-emoji">ðŸ“Œ</span>
                {('type' in post && post.type === "learning") ? "Currently Learning" : "Current Project"}
              </span>
            </div>
          )}
          <div class="post-content">
            <div class="post-header">
              <h2>{post.title}</h2>
              <time datetime={post.date} class="post-date">
                {new Date(post.date).toLocaleDateString()}
              </time>
            </div>
            <p>{post.content}</p>
            <div class="post-footer">
              <div class="post-tags">
                {post.tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            </div>
          </div>
        </article>
      ))
    }
  </div>
</BaseLayout>

<style>
  .posts-container {
    display: flex;
    flex-direction: column;
    gap: var(--space-xl);
    margin-top: var(--space-lg);
    max-width: 1000px;
    margin-left: auto;
    margin-right: auto;
  }

  .post-card {
    width: 100%;
    position: relative;
    transition: all var(--theme-transition-duration) ease;
  }

  /* Styles for pinned posts */
  .pinned-post {
    position: relative;
    border-width: 3px;
  }

  .post-type-learning {
    border-color: var(--accent-primary);
  }

  .post-type-project {
    border-color: var(--accent-primary);
  }

  .pin-indicator {
    position: absolute;
    top: -14px;
    left: var(--space-sm);
    background-color: var(--bg-primary);
    padding: 0 var(--space-sm);
    transition: all var(--theme-transition-duration) ease;
  }

  .pin-label {
    font-size: var(--font-size-sm);
    color: var(--accent-primary);
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .post-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: var(--space-xs);
  }

  .post-header {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    margin-bottom: var(--space-md);
  }

  .post-date {
    font-size: var(--font-size-sm);
    color: var(--contrast-secondary);
  }

  .post-footer {
    margin-top: auto;
    border-top: 2px solid var(--contrast-color);
    padding-top: var(--space-md);
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  @media (max-width: 768px) {
    .posts-container {
      padding: 0 var(--space-md);
      padding-bottom: var(--space-xl);
    }

    .pin-indicator {
      top: -5px;
      right: auto;
      left: var(--space-sm);
      padding-left: 0;
    }

    .pin-emoji {
      display: none;
    }

    .pinned-post .post-header {
      margin-top: var(--space-xs);
    }
  }
</style>
