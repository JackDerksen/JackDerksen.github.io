---
import BaseLayout from "../layouts/BaseLayout.astro";

// Define interfaces for project types
interface BaseProject {
  title: string;
  description: string;
  github: string;
  tags: string[];
}

interface PinnedProject extends BaseProject {
  isPinned: true;
}

interface RegularProject extends BaseProject {
  isPinned?: false;
}

type Project = PinnedProject | RegularProject;

const projects: Project[] = [
  {
    title: "MinUI",
    description:
      "MinUI was born from a desire to create terminal-based games in Rust, " +
      "specifically a terminal Tetris clone in my case. While several terminal " +
      "UI libraries  exist for Rust, none quite offered the perfect balance of " +
      "simplicity, performance, and game-focused features that I was looking " +
      "for. MinUI aims to fill this gap by providing a fast, easy-to-use " +
      "library that makes terminal game and UI development a joy.",
    github: "https://github.com/JackDerksen/minui",
    tags: ["Work in Progress", "Rust"],
    isPinned: true,
  },
  {
    title: "This Website!",
    description:
      "The website you're admiring right now is my first real foray into web development. " +
      "I kind of had no idea what I was doing when I started on this site, but it's been a " +
      "really good learning experience so far. Still lots to improve and lots to learn, " +
      "but I'm very happy with how it's coming along so far! Hopefully you like it too :) " +
      "Powered by Astro.",
    github: "https://github.com/JackDerksen/JackDerksen.github.io",
    tags: ["Web Dev", "Astro"],
    isPinned: true,
  },
  {
    title: "Viis Dev Kit",
    description:
      "Not really a project, but rather a record of the tools that I use for development. " +
      "Includes my custom configurations of my Windows dev environment, LazyVim, Tmux, FZF, and FD. ",
    github: "https://github.com/JackDerksen/viis-dev-kit",
    tags: ["NeoVim", "LazyVim", "Tmux", "Arch Linux", "Tools"],
  },
  {
    title: "CMPT 361 SMTP Application",
    description:
      "A project for my networking class where we had to make a secure mail transfer " +
      "protocol using Python and AES/RSA encryption methods. Developed by myself, Nolan Schlacht, " +
      "and De Xie at MacEwan University.",
    github: "https://github.com/JackDerksen/CMPT-361-Project",
    tags: ["MacEwan", "Networking", "SMTP", "Python"],
  },
  {
    title: "CMPT 229 Movie Rental Application",
    description:
      "A project for my relational database class where we had to make a movie rental " +
      "system database and front-end in the form of a Windows Forms application. Built " +
      "in Visual Studio using C# and SQL. Developed by myself, Andrae Barradas, Ben Nourse, Patrick " +
      "Huynh, and Georgina Sanche at MacEwan University.",
    github: "https://github.com/JackDerksen/Movie-Rental-Project",
    tags: ["MacEwan", "Database", "C#", "SQL"],
  },
];

// Sort projects to show pinned ones first
const sortedProjects = [...projects].sort((a, b) => {
  if (a.isPinned && !b.isPinned) return -1;
  if (!a.isPinned && b.isPinned) return 1;
  return 0;
});
---

<BaseLayout
  title="Projects | Jack Derksen"
  description="View my programming projects and experiments"
>
  <h1>Projects</h1>
  <div class="projects-container">
    {
      sortedProjects.map((project) => (
        <article
          class:list={[
            "card",
            "project-card",
            { "pinned-project": project.isPinned },
          ]}
        >
          {project.isPinned && (
            <div class="pin-indicator">
              <span class="pin-label">
                <span class="pin-emoji">ðŸ“Œ</span>
                Pinned Project
              </span>
            </div>
          )}
          <div class="project-content">
            <div class="project-header">
              <h2>{project.title}</h2>
              <p>{project.description}</p>
            </div>
            <div class="project-footer">
              <div class="project-tags">
                {project.tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
              <a href={project.github} class="project-link">
                View on GitHub
              </a>
            </div>
          </div>
        </article>
      ))
    }
  </div>
</BaseLayout>

<style>
  .projects-container {
    display: flex;
    flex-direction: column;
    gap: var(--space-xl);
    margin-top: var(--space-lg);
    max-width: 1000px;
    margin-left: auto;
    margin-right: auto;
  }

  .project-card {
    width: 100%;
    position: relative;
    transition: all var(--theme-transition-duration) ease;
  }

  .pinned-project {
    border-width: 3px;
    border-color: var(--accent-primary);
  }

  .pin-indicator {
    position: absolute;
    top: -14px;
    left: var(--space-sm);
    background-color: var(--bg-primary);
    padding: 0 var(--space-sm);
    transition: all var(--theme-transition-duration) ease;
  }

  .pin-label {
    font-size: var(--font-size-sm);
    color: var(--accent-primary);
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .project-content {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: var(--space-xs);
  }

  .project-header {
    flex: 1;
  }

  .project-header h2 {
    margin-bottom: var(--space-sm);
  }

  .project-footer {
    margin-top: auto;
    border-top: 2px solid var(--contrast-color);
    padding-top: var(--space-lg);
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-bottom: var(--space-sm);
  }

  .project-link {
    display: inline-block;
  }

  @media (max-width: 768px) {
    .projects-container {
      padding: 0 var(--space-md);
      padding-bottom: var(--space-xl);
    }

    .pin-indicator {
      top: -3px;
      right: auto;
      left: var(--space-sm);
      padding-left: 0;
    }

    .pin-emoji {
      display: none;
    }

    .pinned-project .project-header {
      margin-top: var(--space-sm);
    }
  }
</style>
